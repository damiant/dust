# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup
      uses: actions/setup-node@v4
      with:
        node-version: 18.x        

    - name: Install bun      
      uses: oven-sh/setup-bun@v1          

    - name: Install deps
      run: |
        bun install 

    - name: Lint        
      run: |
        bun run lint

    - name: Build
      run: |
        bun run build

    - name: Deploy preview.dust.events (Netlify website)
      uses: nwtgck/actions-netlify@v2.0
      with:
        publish-dir: './www/browser'
        production-branch: main
      env:
        NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      
    - name: Send To Slack
      id: slack
      uses: slackapi/slack-github-action@v1.25.0
      with:
            # For posting a rich message using Block Kit
            payload: |
              {
                "text": "Dust App Preview build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}",
                "blocks": [
                  {
                    "type": "section",
                    "text": {
                      "type": "mrkdwn",
                      "text": "GitHub Action build result: ${{ job.status }}\n${{ github.event.pull_request.html_url || github.event.head_commit.url }}"
                    }
                  }
                ]
              }
      env:
            SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
            SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK   